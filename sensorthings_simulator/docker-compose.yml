version: '3'

services:
    mbpostgres:
        image: worldsensing/mbpostgres:1.2.2
        volumes:
            - /var/opt/mb_unittests/pg_data:/var/lib/postgresql/data/pgdata
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
        restart: unless-stopped

    mbinfluxdb:
        image: influxdb:1.6.2
        volumes:
            - /var/opt/mb/influxdb:/var/lib/influxdb
        ports:
            - "8086:8086"

    chronograf:
        image: chronograf:1.6.2
        ports:
            - "8888:8888"
        restart: always

    mbcustomobjects_service:
        image: worldsensing/mb_custom_object_service:2.0.0
        ports:
            - "5000:5000"
        links:
            - mbpostgres
        volumes:
            - /var/log/mb/datafeeds/:/var/log/mbdatafeed/
        env_file:
            - ../pws_sensorthings_cos/customobject.env
        restart: always

    mbrabbitmq:
        image: rabbitmq:3.7.8-management
        restart: always
        ports:
            - "5672:5672"

    frost:
        image: fraunhoferiosb/frost-server:1.8
        environment:
            - serviceRootUrl=http://web:8080/FROST-Server   # TODO: Rename here web to frost when also done in the connector main
            - http_cors_enable=true
            - http_cors_allowed.origins=*
            - persistence_db_driver=org.postgresql.Driver
            - persistence_db_url=jdbc:postgresql://database:5432/sensorthings
            - persistence_db_username=sensorthings
            - persistence_db_password=
            - persistence_autoUpdateDatabase=true
        ports:
            - 8080:8080
            - 1883:1883
        depends_on:
            - database

    database:
        image: mdillon/postgis:10
        environment:
            - POSTGRES_DB=sensorthings
            - POSTGRES_USER=sensorthings
            - POSTGRES_PASSWORD=
        volumes:
            - postgis_volume:/var/lib/postgresql/data

volumes:
    postgis_volume:
